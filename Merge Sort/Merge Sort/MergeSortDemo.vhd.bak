library IEEE;
use IEEE.STD_LOGIC_1164.all;

entity MergeSortDemo is
	port( SW : in std_logic_vector(3 downto 0);
			KEY: in std_logic_vector(0 downto 0);
			CLOCK_50: in std_logic;
			LEDR: out std_logic_vector(5 downto 0);
			LEDG: out std_logic_vector(3 downto 0));
end MergeSortDemo;

architecture Shell of MergeSortDemo is
	
	signal s_clkOut, s_count: std_logic;

begin
	
	clk_div: entity work.FreqDivider(Behavioral)
				generic map(k => 50000000)
				port map(clkIn=> CLOCK_50,
							clkOut=> s_clockOut);
							
	control_unit: entity work.ControlUnit(Behavioral)
				port map(clk=> s_clockOut,
							reset=> SW(0),
							insert=> SW(1),
							load=> KEY(0),
							inc_dec=> SW(2),
							merge=> SW(3),
							out_rand=> LEDR(0),
							out_user=> LEDR(1),
							out_load=> LEDR(2),
							out_inc=> LEDR(3),
							out_dec=> LEDR(4),
							out_merge=> LEDR(5),
							




end Shell;